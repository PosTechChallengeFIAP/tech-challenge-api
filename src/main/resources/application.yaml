spring:
    security:
        oauth2:
            client:
                registration:
                    cognito:
                        client-id: ${COGNITO_CLIENT_ID}
                        client-secret: ${COGNITO_CLIENT_SECRET}
                        scope:
                            - openid
                            - email
                        # Spring Security by default uses a redirect-uri in the format: {baseUrl}/login/oauth2/code/{registrationId}
                        # For example: http://localhost:8080/login/oauth2/code/cognito
                        # See more: https://docs.spring.io/spring-security/reference/servlet/oauth2/login/core.html#oauth2login-sample-redirect-uri
                        redirect-uri: http://localhost:8080/login/oauth2/code/cognito
                        clientName: tech-challenge
                provider:
                    cognito:
                        issuerUri: ${COGNITO_ISSUER_URI}
                        user-name-attribute: username
    application:
        name: tech-challenge
    datasource:
        url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}
        username: ${DB_USER}
        password: ${DB_PASSWORD}
        driver-class-name: com.mysql.cj.jdbc.Driver
    jpa:
        hibernate:
            ddl-auto: none
        database-platform: org.hibernate.dialect.MySQLDialect
    liquibase:
        change-log: classpath:db/migration.xml